<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xk.dao.StudentDao">
    <!--查询操作-->
    <select id="selectStudents" resultType="com.xk.domain.Student">
        select * from student7
    </select>
    <!--插入操作-->
    <insert id="insertstudent">
        insert into student7(xuehao,uname ,usex,zhuanye,tupian)values (#{xuehao}, #{uname},#{usex},#{zhuanye},#{tupian})/*使用占位符*/
    </insert>
</mapper>
        <!--
        sql映射文件：写sql语句的，MyBatis会执行这些sql
        1.指定约束文件
             <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

           mybatis-3-mapper.dtd是约束文件名称，扩展名是dtd。
        2.约束文件作用：限制，检查在当前文件中出现的标签，属性必须符合mybatis的要求

        3.mapper  是当前的文件的根标签 ，必须的
          namespece：叫做命令空间，唯一值，可以是自定义的字符串。
                     要求你使用dao接口的全限定名称。
                     例如在这个例子中为：com.xk.dao.StudentDao

        4.在当前文件中，可以使用特定的标签，表示数据库的特定操作。
        <select>：表示执行查询，select语句
        <update>：表示更新数据库的操作，就是在<update>标签中写update sql语句
        <insert>：表示插入，放在insert语句
        <delete>：表示删除，执行delete语句
        
        5.<select>: 表示查询操作， 标签中必须是 select 语句
             id: 你要执行的sql语法的唯一标识，mybatis会使用这个id的值来找到要执行的sql语句
                 可以自定义，但要求你使用
             resultType: 表示结果类型的，是sql语句执行后得到ResulSet，遍历这个ResultSet得到java对象的类型
                  值写的类型的全限定名称（也就是类的全名）
        -->